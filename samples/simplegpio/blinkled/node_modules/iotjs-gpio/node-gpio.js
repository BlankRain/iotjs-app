// node-gpio.js:
//  IoT.js GPIO control emulation on node.js
var pi_gpio = require('pi-gpio');

var GPIO_ENABLE  = 0x00020000;  // sync with iotjs gpio control
var GPIO_OUTPUT  = 0x00010000;
var GPIO_MODEMASK= 0x00ff0000;
var GPIO_PINMASK = 0x000000ff;

function noop() {}

function GPIO() {

}

GPIO.initialize = function(callback) {
  process.nextTick(function(){
    callback(0);
  });
};


GPIO.release = function() {
};


GPIO.pinmode = function(port, callback) {
  var direction = "";
  var pinmode = port & GPIO_MODEMASK;

  port = port & GPIO_PINMASK;
  if (pinmode & GPIO_ENABLE) {   // enable
    if (pinmode & GPIO_OUTPUT)   // output
      direction = "out";
    pi_gpio.open(port, direction, callback);
  }
  else {
    pi_gpio.close(port, callback);
  }
}


GPIO.write = function(port, val, callback) {
  pi_gpio.write(port, val, (callback || noop));
};


GPIO.read = function(port, callback) {
  pi_gpio.read(port, (callback || noop));
};


module.exports = GPIO;
